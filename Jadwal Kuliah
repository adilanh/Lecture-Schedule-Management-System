import tkinter as tk
from tkinter import messagebox, filedialog
from tkinter import ttk
import csv

class JadwalKuliah:
    def __init__(self, nama_matkul, hari, jam, ruang, nama_dosen):
        self.nama_matkul = nama_matkul
        self.hari = hari
        self.jam = jam
        self.ruang = ruang
        self.nama_dosen = nama_dosen

class ManajemenJadwal:
    def __init__(self):
        self.jadwal_kuliah = []

    def create(self, nama_matkul, hari, jam, ruang, nama_dosen):
        jadwal = JadwalKuliah(nama_matkul, hari, jam, ruang, nama_dosen)
        self.jadwal_kuliah.append(jadwal)

    def read(self):
        return self.jadwal_kuliah

    def update(self, nama_matkul, hari, jam, ruang, nama_dosen):
        for jadwal in self.jadwal_kuliah:
            if jadwal.nama_matkul == nama_matkul:
                jadwal.hari = hari
                jadwal.jam = jam
                jadwal.ruang = ruang
                jadwal.nama_dosen = nama_dosen
                return True
        return False

    def delete(self, nama_matkul):
        for jadwal in self.jadwal_kuliah:
            if jadwal.nama_matkul == nama_matkul:
                self.jadwal_kuliah.remove(jadwal)
                return True
        return False

    def sort_by_hari(self):
        self.jadwal_kuliah.sort(key=lambda x: x.hari)

    def search_by_nama_matkul(self, nama_matkul):
        for jadwal in self.jadwal_kuliah:
            if jadwal.nama_matkul == nama_matkul:
                return jadwal
        return None

    def import_data_csv(self, file_name):
        with open(file_name, 'r') as file:
            reader = csv.reader(file)
            next(reader) 
            for row in reader:
                self.create(row[0], row[1], row[2], row[3], row[4])


        self.root.configure(bg="#B3E5FC")

        self.style = ttk.Style()
        self.style.configure("TLabel", background="#B3E5FC", foreground="black", font=("Arial", 12, "bold"))
        self.style.configure("TEntry", fieldbackground="#FFFFFF", font=("Arial", 12))
        self.style.configure("TButton", background="#3498DB", foreground="black", font=("Arial", 12, "normal"))

        self.main_frame = ttk.Frame(root, padding=20, style="TFrame", relief=tk.RIDGE)
        self.main_frame.pack()

        self.title_label = ttk.Label(self.main_frame, text="Sistem Manajemen Jadwal Kuliah", style="TLabel")
        self.title_label.pack(pady=10)

        self.input_frame = ttk.Frame(self.main_frame, padding=10, style="TFrame", relief=tk.RIDGE)
        self.input_frame.pack(side=tk.LEFT, padx=10)

        self.nama_matkul_label = ttk.Label(self.input_frame, text="Nama Mata Kuliah", style="TLabel")
        self.nama_matkul_label.pack(pady=5)
        self.nama_matkul_entry = ttk.Entry(self.input_frame, width=30, style="TEntry")
        self.nama_matkul_entry.pack(pady=5)

        self.hari_label = ttk.Label(self.input_frame, text="Hari", style="TLabel")
        self.hari_label.pack(pady=5)
        self.hari_entry = ttk.Entry(self.input_frame, width=30, style="TEntry")
        self.hari_entry.pack(pady=5)

        self.jam_label = ttk.Label(self.input_frame, text="Jam", style="TLabel")
        self.jam_label.pack(pady=5)
        self.jam_entry = ttk.Entry(self.input_frame, width=30, style="TEntry")
        self.jam_entry.pack(pady=5)

        self.ruang_label = ttk.Label(self.input_frame, text="Ruang", style="TLabel")
        self.ruang_label.pack(pady=5)
        self.ruang_entry = ttk.Entry(self.input_frame, width=30, style="TEntry")
        self.ruang_entry.pack(pady=5)

        self.nama_dosen_label = ttk.Label(self.input_frame, text="Nama Dosen", style="TLabel")
        self.nama_dosen_label.pack(pady=5)
        self.nama_dosen_entry = ttk.Entry(self.input_frame, width=30, style="TEntry")
        self.nama_dosen_entry.pack(pady=5)

        self.button_frame = ttk.Frame(self.main_frame, padding=10, style="TFrame", relief=tk.RIDGE)
        self.button_frame.pack(side=tk.LEFT, padx=10)

        self.urutkan_label = ttk.Label(self.button_frame, text="Urutkan Jadwal Berdasarkan", font=("Arial", 12))
        self.urutkan_label.pack(pady=5, side=tk.TOP, anchor=tk.W)

        self.urutkan_combo = ttk.Combobox(self.button_frame, values=["Hari", "Nama Mata Kuliah", "Nama Dosen"], state="readonly")
        self.urutkan_combo.pack(pady=5)

        self.sort_button = ttk.Button(self.button_frame, text="Urutkan", command=self.urutkan_jadwal, style="TButton")
        self.sort_button.pack(fill=tk.X, pady=5)

        self.cari_label = ttk.Label(self.button_frame, text="Cari Jadwal Berdasarkan", font=("Arial", 12))
        self.cari_label.pack(pady=5, side=tk.TOP, anchor=tk.W)

        self.cari_combo = ttk.Combobox(self.button_frame, values=["Nama Mata Kuliah", "Hari", "Nama Dosen"], state="readonly")
        self.cari_combo.pack(pady=5)

        self.cari_entry = ttk.Entry(self.button_frame, width=30, style="TEntry")
        self.cari_entry.pack(pady=5)

        self.cari_button = ttk.Button(self.button_frame, text="Cari Jadwal", command=self.cari_jadwal, style="TButton")
        self.cari_button.pack(fill=tk.X, pady=5)

        self.tambah_button = ttk.Button(self.button_frame, text="Tambah Jadwal", command=self.tambah_jadwal, style="TButton")
        self.tambah_button.pack(fill=tk.X, pady=5)

        self.lihat_button = ttk.Button(self.button_frame, text="Lihat Jadwal", command=self.lihat_jadwal, style="TButton")
        self.lihat_button.pack(fill=tk.X, pady=5)

        self.ubah_button = ttk.Button(self.button_frame, text="Ubah Jadwal", command=self.ubah_jadwal, style="TButton")
        self.ubah_button.pack(fill=tk.X, pady=5)

self.hapus_button = ttk.Button(self.button_frame, text="Hapus Jadwal", command=self.hapus_jadwal, style="TButton")
        self.hapus_button.pack(fill=tk.X, pady=5)

        self.import_button = ttk.Button(self.button_frame, text="Import Jadwal dari CSV", command=self.import_jadwal, style="TButton")
        self.import_button.pack(fill=tk.X, pady=5)

        self.keluar_button = ttk.Button(self.button_frame, text="Keluar", command=root.quit, style="TButton")
        self.keluar_button.pack(fill=tk.X, pady=5)

    def tambah_jadwal(self):
        nama_matkul = self.nama_matkul_entry.get()
        hari = self.hari_entry.get()
        jam = self.jam_entry.get()
        ruang = self.ruang_entry.get()
        nama_dosen = self.nama_dosen_entry.get()
        self.manajemen_jadwal.create(nama_matkul, hari, jam, ruang, nama_dosen)
        messagebox.showinfo("Sukses", "Jadwal berhasil ditambahkan")

    def lihat_jadwal(self):
        jadwals = self.manajemen_jadwal.read()
        jadwal_str = "\n\n".join([f"Nama Mata Kuliah: {jadwal.nama_matkul}\nHari: {jadwal.hari}\nJam: {jadwal.jam}\nRuang: {jadwal.ruang}\nNama Dosen: {jadwal.nama_dosen}" for jadwal in jadwals])
        messagebox.showinfo("Daftar Jadwal", jadwal_str)

    def ubah_jadwal(self):
        nama_matkul = self.nama_matkul_entry.get()
        hari = self.hari_entry.get()
        jam = self.jam_entry.get()
        ruang = self.ruang_entry.get()
        nama_dosen = self.nama_dosen_entry.get()
        if self.manajemen_jadwal.update(nama_matkul, hari, jam, ruang, nama_dosen):
            messagebox.showinfo("Sukses", "Jadwal berhasil diubah")
        else:
            messagebox.showerror("Error", "Jadwal tidak ditemukan")

    def hapus_jadwal(self):
        nama_matkul = self.nama_matkul_entry.get()
        if self.manajemen_jadwal.delete(nama_matkul):
            messagebox.showinfo("Sukses", "Jadwal berhasil dihapus")
        else:
            messagebox.showerror("Error", "Jadwal tidak ditemukan")

    def urutkan_jadwal(self):
        selected_criteria = self.urutkan_combo.get()
        if selected_criteria == "Hari":
            self.manajemen_jadwal.sort_by_hari()
        elif selected_criteria == "Nama Mata Kuliah":
            self.manajemen_jadwal.sort_by_nama_matkul()
        elif selected_criteria == "Nama Dosen":
            self.manajemen_jadwal.sort_by_nama_dosen()
        self.lihat_jadwal()

    def cari_jadwal(self):
        criteria = self.cari_combo.get()
        value = self.cari_entry.get()
        jadwals = self.manajemen_jadwal.search_by_criteria(criteria, value)
        if jadwals:
            jadwal_str = "\n\n".join([f"Nama Mata Kuliah: {jadwal.nama_matkul}\nHari: {jadwal.hari}\nJam: {jadwal.jam}\nRuang: {jadwal.ruang}\nNama Dosen: {jadwal.nama_dosen}" for jadwal in jadwals])
            messagebox.showinfo("Hasil Pencarian", jadwal_str)
        else:
            messagebox.showerror("Error", "Jadwal tidak ditemukan")

    def import_jadwal(self):
        file_path = filedialog.askopenfilename()
        if file_path:
            self.manajemen_jadwal.import_data_csv(file_path)
            messagebox.showinfo("Sukses", "Jadwal berhasil diimpor")

if __name__ == "__main__":
    root = tk.Tk()
    manajemen_jadwal = ManajemenJadwal()
    app = JadwalKuliahApp(root, manajemen_jadwal)
    root.mainloop()

